getwd()
x <- matrix(1:6, 2, 3)
x
x <- matrix(1:6)
x
x <- matrix(1:6, 2, 4)
x <- c(4, TRUE)
x
typeof(x)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
class(cbind(x, y))
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
typeof(x[[1]])
x <- 1:4
y <- 2:3
x + y
x
y
class(x + y)
x <- read.csv("hw1_data.csv", header = TRUE)
x[,1]
sum(is.na(x[,1]))
mean(!is.na(x[,1]))
mean(is.na(x[,1]))
mean(is.na(x[,1]))
mean(!is.na(x[,1]))
!is.na(x[,1])
mean(na.omit(x[,1]))
na.omit(x[,1])
x
clear()
clear
x
x["Ozone" > 31]
x["Ozone"]
x[x["Ozone"] > 31 && x["Temp"] > 90]
x[x["Ozone"] > 31 & x["Temp"] > 90]
na.omit(x[x["Ozone"] > 31 & x["Temp"] > 90])
na.omit(x[(x["Ozone"] > 31) & (x["Temp"] > 90)])
na.omit(x[x["Ozone"] > 31])
x[x["Ozone"] > 31]
x[x[,1] > 31]
x[,1]
x
x["Ozone"]
x[x["Ozone"] > 31]
x["Ozone"] > 31
get(x["Ozone"] > 31)
x[x["Ozone"] > 31]
mean(na.omit(x[(x["Ozone"] > 31) & (x["Temp"] > 90)]))
mean(na.omit(x[(x["Ozone"] > 31) & (x["Temp"] > 90)]["Solar.R"]))
x["Ozone"] > 31
x[x["Ozone"] > 31]
x[[x["Ozone"] > 31]]
x[x[["Ozone"] > 31]
x[x[["Ozone"]] > 31]
x[[x["Ozone"] > 31]]
y <- x["Ozone"] > 31
y
y <- x[x["Ozone"] > 31]
y
x[,1]
na.omit(x[x[,1] > 31])
na.omit(x[x[,1] > 31])
na.omit(x[(x[,1] > 31)])
x[x[,1] > 31]
x[,1]
class(x)
subset(x, x$Ozone > 31, x$Temp > 90)
subset(x, which(x$Ozone > 31, x$Temp > 90))
subset(x, x$Ozone > 31 & x$Temp > 90)
mean(subset(x, x$Ozone > 31 & x$Temp > 90)$Solar.R)
mean(subset(x, x$Month == 10)$Temp)
mean(subset(x, x$Month == 6)$Temp)
max(subset(x, x$Month == 5)$Ozone)
max(na.omit(subset(x, x$Month == 5)$Ozone))
install.packages("swirl")
install_from_swirl("R Programming")
install_from_swirl("R Programming")
library(swirl)
install_from_swirl("R Programming")
swirl()
numeric(1)
numeric(2)
c(2)
search()
x <- 2
x;
x
Sys.time()
Sys.time()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
x > 5
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
z
f(3)
g(0)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
